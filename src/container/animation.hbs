{{!--
Це код container файлу для animation сторінки,
в якому міститься код, котрий буде віддаватися по шляху (PATH) - "/animation"
--}}

<div class="p-5">

	<hr />
	<hr />

	<div class="display-1"><mark>Робота з анімаціями</mark></div>

	<p>

	<pre>

	Що таке
	перехідна анімація?
	
	Перехідна анімація — це властивості CSS,
	які дають можливість задати плавний перехід
	з одних значень властивостей в інші
	
	.button_ {
	color: black;
	background: green;
	}
	
	.button_:hover {
	color: white;
	background: black;
	border-radius: 50%;
	}
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Перехід
	
	transition — це CSS властивість, яка встановлює
	ефект плавного переходу стилів для елемента
	
	.example {
	transition: all 2s ease-out;
	}
		
	transition

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Перехід
	
	Значення Опис
	
	P DU TF DE
	
	P — властивість,
	DU — тривалість,
	TF — тип кривої переходу,
	DE — затримка переходу
	
	P (property) transition-property
	
	DU (duration) transition-duration
	
	TF (timing function) transition-timing-function
	
	DE (delay) transition-delay

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Перехід властивості
	
	transition-property — це CSS властивість, яка вказує на
	властивість, яка буде плавно змінювати своє значення
	
	.example {
	transition-property: color;
	}
		
	transition-property
	
	Значення Опис
	
	none Відсутність переходу
	
	all Встановлює перехід для всіх властивостей CSS
	
	Назва конкретної
	властивості Встановлює перехід для цієї властивості

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Час переходу
	
	transition-duration — це CSS властивість,
	яка використовується для встановлення тривалості
	переходу між двома станами елемента
	
	.example {
	transition-duration: 120ms;
	}
		
	transition-duration
	
	Значення Опис
	
	час Вказує тривалість переходу в секундах або
		мілісекундах.
	
	0 Вказує, що тривалість переходу рівна нулю, тобто
		перехід не буде відображатися.

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Тип кривої переходу
	
	transition-timing-function — це CSS властивість, яка
	визначає, як швидко або повільно змінюється стиль
	елемента під час переходу між двома станами.
	
	transition-timing-function
	
	.example {
	transition-timing-function: ease-in-out;
	}

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Тип кривої переходу
	
	Значення Опис
	
	ease
	
	Стандартне значення, де перехід починається
	повільно, а потім прискорюється, а після досягнення
	кінцевого значення сповільнюється
	
	linear Значення, де перехід відбувається з однаковою
	швидкістю протягом всієї тривалості переходу
	
	ease-in
	
	Значення, де перехід починається повільно і
	прискорюється під час наближення до кінцевого
	значення
	
	ease-out
	
	Значення, де перехід спочатку швидкий, але
	сповільнюється під час наближення до кінцевого
	значення
	
	ease-in-out
	
	Значення, де перехід починається повільно,
	прискорюється до певної швидкості, а потім
	сповільнюється під час наближення до кінцевого
	значення

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Тип кривої переходу
	
	Значення Опис
	
	cubic-bezier(n1,n2,n3,n4)
	
	Значення, де можна вказати власну функцію
	залежності часу від прогресу переходу.
	
	Чотири значення n вказують коефіцієнти кубічної
	функції Безьє.
	
	step-start Перехід здійснюється миттєво на початку анімації
	
	step-end Перехід здійснюється миттєво в кінці анімації
	
	steps(n) Значення, де можна вказати кількість кроків,
		за якими буде рухатись анімація
	
	Перейти на онлайн демо
	https://codesandbox.io/s/transition-timing-function-e3i7ek?file=/style.css
	
	Генератор cubic-bezier онлайн
	https://www.cssportal.com/css-cubic-bezier-generator/

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Затримка переходу
	
	transition-delay — це CSS властивість, яка визначає
	тривалість очікування перед виконанням анімації переходу
	
	.example {
	transition-delay: ease-in-out;
	}
		
	transition-delay
	
	Значення Опис
	
	час Часовий проміжок,
		задає затримку в секундах або мілісекундах

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Що таке анімація
	за кадрами?
	
	Анімація за кадрами — це властивості CSS, які дають
	можливість задати етапи переходу значень властивостей
	
	0% {
	color: black;
	background: green;
	}
	
	50% {
	color: white;
	background: black;
	}
	
	100% {
	border-radius: 50%;
	}

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Кадри анімації
	
	@keyframes — це CSS правило, яке використовується
	для визначення анімаційних кадрів для анімації
	
	@keyframes myAnimation {
	from { background-color: red; }
	to { background-color: yellow; }
	}
	
	@keyframes &lt;name&gt;
	
		Значення Опис
	
		from Визначають правила для початкового стану
			елемента
	
		to Визначають правила для кінцевого стану елемента
	
		% Визначають правила для етапу виконання анімації
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Що таке
	CSS правило?
	
	CSS правило — це конструкції, які визначають спеціальні
	властивості та функції, які не обмежуються конкретним
	елементом та можуть передаватись до властивостей

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Кадрова анімація
	
	animation — це CSS властивість, яка дозволяє встановити
	анімаційні кадри та їх налаштування для елемента
	
	.example {
	animation: 3s linear 1s slidein;
	}
		
	animation
	
	Значення Опис
	
	N DU TF DE IC DI FM PS
	
	N — назва анімації,
	DU — тривалість анімації,
	TF — таймінг анімації,
	DE — затримка анімації
	IC — кількість повторень анімації,
	DI — напрямок анімації,
	FM — заповнення анімації
	PS — стан анімації
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Кадрова анімація
	
	Значення Опис
	
	N (name) animation-name
	
	DU (duration) animation-duration
	
	TF (timing function) animation-timing-function
	
	DE (delay) animation-delay
	
	IC (iteration count) animation-iteration-count
	
	DI (direction) animation-direction
	
	FM (fill mode) animation-fill-mode
	
	PS (play state) animation-play-state
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Назва
	кадрової анімації
	
	animation-name — це CSS властивість, яка встановлює
	назву кадрової анімації, яку потрібно застосувати
	
	.example {
	animation-name: spin;
	}
		
	animation-name
	
	Значення Опис
	
	none Не застосовує жодну анімацію
	
	ідентифікатор Назва кадрової анімації
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Тривалість
	кадрової анімації
	
	animation-duration — це CSS властивість, яка
	встановлює тривалість кадрової анімації
	
	.example {
	animation-duration: 2s;
	}
		
	animation-duration
	
	Значення Опис
	
	час Тривалість анімації в секундах або мілісекундах

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Тип кривої
	кадрової анімації
	
	animation-timing-function — це CSS властивість,
	яка визначає, як швидко або повільно
	виконується кадрова анімація
	
	animation-timing-function
	
	.example {
	animation-timing-function: ease-in-out;
	}
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Тип кривої переходу
	
	Значення Опис
	
	ease
	
	Стандартне значення, де перехід починається
	повільно, а потім прискорюється, а після досягнення
	кінцевого значення сповільнюється
	
	linear Значення, де перехід відбувається з однаковою
	швидкістю протягом всієї тривалості переходу
	
	ease-in
	
	Значення, де перехід починається повільно і
	прискорюється під час наближення до кінцевого
	значення.
	
	ease-out
	
	Значення, де перехід спочатку швидкий, але
	сповільнюється під час наближення до кінцевого
	значення
	
	ease-in-out
	
	Значення, де перехід починається повільно,
	прискорюється до певної швидкості, а потім
	сповільнюється під час наближення до кінцевого
	значення.

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Тип кривої переходу
	
	Значення Опис
	
	cubic-bezier(n1,n2,n3,n4)
	
	Значення, де можна вказати власну функцію
	залежності часу від прогресу переходу.
	
	Чотири значення n вказують коефіцієнти кубічної
	функції Безьє.
	
	step-start Перехід здійснюється миттєво на початку анімації
	
	step-end Перехід здійснюється миттєво в кінці анімації
	
	steps(n) Значення, де можна вказати кількість кроків,
	
	за якими буде рухатись анімація
	
	Перейти на онлайн демо
	https://codepen.io/2rv/pen/oNaGQEL
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Затримка
	кадрової анімації
	
	animation-delay — це CSS властивість, яка встановлює
	тривалість очікування перед виконанням кадрової анімації
	
	.example {
	animation-delay: running;
	}
		
	animation-delay
	
	Значення Опис
	
	час Значення в секундах (від'ємні значення дозволені),
		наприклад "0.5s" або "-2s"
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Кількість повторення
	кадрової анімації
		
	animation-iteration-count — це CSS властивість, яка
	визначає кількість разів повторення кадрової анімації
		
	.example {
	animation: 3;
	}
				
	animation-iteration-count
		
	Значення Опис
		
	число Вказує кількість повторень анімації
		
	infinite Анімація буде відтворюватись нескінчену кількість разів
	
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Напрям
	кадрової анімації
		
	animation-direction — це CSS властивість, яка встановлює
	напрямок кадрової анімації, коли вона відтворюється
		
	.example {
	animation-direction: reverse;
	}
	
	animation-direction
	
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Напрям анімації
		
	Значення Опис
		
	normal Анімація відтворюється в звичайному порядку
		(від початку до кінця)
		
	reverse Анімація відтворюється у зворотному порядку
		(від кінця до початку)
		
	alternate Анімація відтворюється спочатку в одному
		напрямку, а потім у зворотному
		
	alternate-reverse Анімація відтворюється спочатку у зворотному
		напрямку, а потім у звичайному
	
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Режим застосування
	кадрової анімації
		
	animation-fill-mode — це CSS властивість, яка встановлює,
	як кадрова анімація застосовується до та після її виконання.
		
	.example {
	animation-play-state: forwards;
	}
	
	animation-fill-mode
	
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Режим застосування
	кадрової анімації
		
	Значення Опис
		
	none Елемент повертається до свого початкового стану
		після закінчення анімації.
		
	forwards В останній момент анімації елемент зупиняється
		на своєму кінцевому значенні.
		
	backwards
		
	Перед початком анімації елемент буде мати
	початкове значення, але він зміниться відразу ж
	після старту анімації на значення з першого кроку
	анімації.
		
	both Працює одночасно як forwards та backwards
		
	Перейти на онлайн демо
	https://codesandbox.io/s/animation-fill-mode-m960si?file=/style.css
		
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Стан
	кадрової анімації
		
	animation-play-state — це CSS властивість,
	яка встановлює стан анімації
		
	.example {
	animation-play-state: running;
	}
			
	animation-play-state
		
	Значення Опис
		
	running Анімація відтворюється
		
	paused Анімація зупинена
		
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Перетворення
		
	transform — це CSS властивість, яка дозволяє змінювати в
	елементі форму, розмір, розташування, орієнтацію тощо
		
	.example {
	transform: rotate(45deg);
	}
			
	transform
		
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Перетворення
		
	Значення Опис
		
	none Вказує, що жодного перетворення не
		застосовується. Значення за замовчуванням
		
	matrix3d()
		
	Застосовує матрицю 4x4 до елемента. Це дозволяє
	виконувати різні види перетворень, такі як
	повороти, нахил і масштабування в будь-якому
	напрямку.
		
	perspective()
		
	Встановлює відстань між зоровим центром та
	площиною відображення, що дозволяє створювати
	3D-ефекти на сторінці.
		
	rotate Застосовує поворот до елемента. Можна вказати
		кут повороту у градусах або радіанах.
		
	rotate3d Застосовує поворот в 3D-просторі до елемента.
		Можна вказати вектор повороту та кут повороту.
		
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Перетворення
		
	Значення Опис
		
	rotateX Повертає елемент навколо його горизонтальної осі
		
	rotateY Повертає елемент навколо його вертикальної осі
		
	rotateZ Повертає елемент навколо його осі Z
		
	translate Зсуває елемент на задану відстань по горизонталі
		та вертикалі
		
	translate3d Зсуває елемент на задану відстань по всіх трьох
		осях (X, Y, Z)
		
	translateX Переміщує елемент по горизонталі на задану
		відстань
		
	translateY Переміщує елемент по вертикалі на задану відстань
		
	translateZ Переміщує елемент по осі Z на задану відстань
		
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Перетворення
		
	Значення Опис
		
	scale Змінює масштаб елемента в горизонтальному та
		вертикальному напрямках
		
	scale3d Змінює масштаб елемента в тривимірному просторі
		
	scaleX Змінює масштаб елемента в горизонтальному
		напрямку
		
	scaleY Змінює масштаб елемента в вертикальному
		напрямку
		
	scaleZ Змінює масштаб елемента на осі Z тривимірного
		простору
		
	skew Задає нахил елемента по обох осях
		
	skewX Задає нахил елемента по горизонталі
		
	skewY Задає нахил елемента по вертикалі
		
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Перетворення
		
	Значення Опис
		
	matrix(a, c, b, d, x, y) Задає матриці перетворень для елемента
		
	Значення a Масштабування по горизонталі. Значення від 0 до 1
		зменшує елемент, більше 1 збільшує.
		
	Значення c Нахил елемента по горизонталі
		
	Значення b Нахил елемента по вертикалі
		
	Значення d Масштабування по вертикалі.
		
	Значення x Зсув елемента по горизонталі
		
	Значення y Зсув елемента по вертикалі
		
	Генератор transform онлайн
	https://www.cssportal.com/css-3d-transform-generator/
	
	Перейти на онлайн демо
	https://codesandbox.io/s/transform-1og46l
	
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Точка перетворення
		
	transform-origin — це CSS властивість,
	яка визначає точки, в яких застосовуються перетворення
		
	.example {
	transform-origin: top left;
	}
	
	transform-origin
	
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Точка перетворення
		
	значення Опис
		
	center Встановлює точку перетворення в центрі елементу.
		
	Значення за замовчуванням
		
	left Встановлює точку перетворення в лівому краї елементу
		
	right Встановлює точку перетворення в правому краї елементу
		
	top Встановлює точку перетворення в верхній частині елементу
		
	bottom Встановлює точку перетворення в нижній частині елементу
		
	довжина Вказує відстань точки від країв в одиниці вимірювання
		
	% Вказує відстань точки від країв у відсотках
		
	</pre>

	</p>

	<hr />
	<hr />

</div>

<div class="page">
	<div class="page_content">
		<header class="header">
			{{!-- <div class="">
				{{> logo}}
			</div> --}}
			<a href="#test">
				{{> logo}}
			</a>

			<nav class="header_nav">
				<div class="header_nav_right">
					{{> navTemplate list=header}}
				</div>
			</nav>
		</header>

		{{!-- <div class="modal">
			{{hero.text}}
		</div> --}}

		{{#with hero}}
		<div class="hero">
			<div class="hero_content">
				<h1 class="hero_title">{{title}}</h1>
				<p class="hero_text">{{text}}</p>
			</div>
			<div class="hero_slider">
				<div class="hero_slider_icon hero_slider_left">{{left}}</div>
				<img src="{{photo}}" alt="Hero image" class="hero_image">
				<div class="hero_slider_icon hero_slider_right">{{right}}</div>
			</div>
		</div>
		{{/with}}

		{{!-- <div class="modal">
			{{hero.text}}
		</div> --}}

		{{!-- <div class="modal">
			{{hero.text}} {{hero.text}}
			<img src="{{hero.photo}}" alt="Hero image" class="modal_image">
			{{hero.text}} {{hero.text}}
		</div> --}}

		{{!-- <input type="text" class="input"> --}}

		<div class="modal">
			{{hero.text}} {{hero.text}}
			{{!-- <img src="{{hero.photo}}" alt="Hero image" class="modal_image"> --}}
			<div class="modal_text">
				{{hero.text}} {{hero.text}}
			</div>
		</div>

		<main class="blog">
			{{#each blog}}
			{{> cardBlog data=this}}
			{{/each}}
		</main>

		{{#with form}}
		<div class="form">
			<div class="form_content">
				<h3 class="form_title">{{title}}</h3>
				<p class="form_info">{{info}}</p>
			</div>
			<div class="form_action">
				<a href="{{href}}" class="button form_button">{{button}}</a>
			</div>
		</div>
		{{/with}}

		<footer class="footer" id="test">
			<div>
				{{> logo}}
				<span class="footer_copyright">Copyright 2023-2024</span>
			</div>
			{{#each footer}}
			<div>
				<span class="footer_title">{{title}}</span>
				{{> navTemplate list=links isVertical=true}}
			</div>
			{{/each}}
		</footer>
	</div>
</div>

{{!--
Цей код містить лише те, що буде виводитись в {{{body}}} в layout/animation.hbs
Адже наш layout/animation.hbs має вже структуру HTMLlist
--}}