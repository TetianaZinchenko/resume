{{!--
Це код container файлу для grid сторінки,
в якому міститься код, котрий буде віддаватися по шляху (PATH) - "/grid"
--}}

<div class="p-5">

	<hr />
	<hr />

	<div class="display-1"><mark>Робота з сітковим позиціюванням</mark></div>

	<p>

	<pre>

	Що таке сіткове
	позиціювання?
	
	Сіткове позиціювання (grid) — це сучасна технологія
	позиціювання в CSS, яка є альтернативою
	сіткової системи bootstrap та flexbox
	
	.example {
	display: grid;
	}
		
	display
	
	Значення Опис
	
	grid Елемент відображається як сітковий блоковий контейнер
	
	inline-grid Елемент відображається як сітковий рядковий контейнер
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Cітка
	
	grid — це універсальна CSS властивість,
	яка визначає загальні налаштування сіткової системи
	
	.example {
	grid: repeat(2, 60px) / auto-flow 80px
	}
		
	grid

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Cітка
	
	Значення Опис
	
	TR / TC TA / AR AC AF
	
	TR — кількість та висота рядків,
	TC — кількість та висота стовпців,
	TA — імена областей,
	AR — висота автоматичних рядків,
	AC — висота автоматичних стовпців,
	AF — порядок розміщення елементів,
	
	TR (template rows) grid-template-rows
	
	TC (template columns) grid-template-columns
	
	TA (template areas) grid-template-areas
	
	AR (auto rows) grid-auto-rows
	
	AC (auto columns) grid-auto-columns
	
	AF (auto flow) grid-auto-flow

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Шаблон сітки
	
	grid-template — це CSS властивість,
	яка використовується для визначення шаблону сітки
	
	.example {
	grid-template: 100px 1fr / 50px 1fr;
	}
		
	grid-template
	
	Значення Опис
	
	A R / C
	
	A — імена областей сітки
	R — розмір та кількість рядків сітки
	C — розмір та кількість стовпців сітки
	
	A grid-template-areas
	
	R grid-template-rows
	
	C grid-template-columns

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Шаблон стовпців
	
	grid-template-columns — це CSS властивість,
	яка визначає кількість і розмір стовпців
	
	.example {
	grid-template-columns: 100px;
	}
		
	grid-template-columns
	
	Значення Опис
	
	auto Розмір буде встановлено на автоматичну довжину
	
	довжина Розмір буде встановлено на вказану
	
	одиницю вимірювання
	
	% Розмір буде встановлено на вказаний відсоток
	
	fr (fractional unit) Вказує відносну одиницю пропорції

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Шаблон рядків
	
	grid-template-rows — це CSS властивість,
	яка визначає кількість і розміри рядків
	
	.example {
	grid-template-rows: 50px;
	}
		
	grid-template-rows
	
	Значення Опис
	
	auto Розмір буде встановлено на автоматичну довжину
	
	довжина Розмір буде встановлено на вказану
	
	одиницю вимірювання
	
	% Розмір буде встановлено на вказаний відсоток
	
	fr (fractional unit) Вказує відносну одиницю пропорції

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Повторення
	
	repeat() — це CSS функція, яка використовується
	для повторення заданого значення
	
	.example {
	grid-template-columns: repeat(3, 1fr);
	}
		
	repeat(n, v)
	
	Значення Опис
	
	кількість повторів (n) Кількість разів, які потрібно повторити значення
	
	значення (v) Значення, яке потрібно повторити

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Мін-макс значення
	
	minmax() — це CSS функція, яка використовується для
	визначення мінімальної та максимальної довжини
	
	.example {
	grid-template-columns: minmax(20px, auto);
	}
		
	minmax(min, max)
	
	Значення Опис
	
	min Мінімальне значення довжини
	
	max Максимальне значення довжини

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Підігнати розмір
	контенту
	
	fit-content() — це CSS функція, яка встановлює розмір
	елемента, який відповідає розміру самого контенту
	елемента, але не більше, ніж переданий параметр
	
	.example {
	width: fit-content(50%);
	}
		
	fit-content(max)
	
	Значення Опис
	
	max Максимальне значення довжини

	Додаткові значення
	
	Значення Опис
	
	min-content Розмір буде встановлено на мінімальну можливу
	
	довжину відповідно до вмісту елементів
	
	max-content Розмір буде встановлено на максимально можливу
	
	довжину відповідно до вмісту елементів

	Додаткові значення
	
	Значення Опис
	
	auto-fill
	
	Автоматично створить стільки стовпців або рядків, скільки
	може вмістити доступний простір, зберігаючи мінімальний
	розмір для елементів сітки
	
	.example {
	grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
	}

	Додаткові значення
	
	Значення Опис
	
	auto-fit Працює так само як auto-fill, але видаляє порожні рядки та
	
	стовпці, щоб елементи повністю заповнили простір
	
	.example {
	grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
	}

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Шаблон області
	
	grid-template-areas — це CSS властивість, яка визначає
	іменовані області, по якім можна розмістити елементи
	
	.example {
	grid-template-areas:
	"nav header"
	"nav body"
	"nav footer";
	}
		
	grid-template-areas
	
	Значення Опис
	
	"назва_області" Вказати назву області

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Область сітки
	
	grid-area — це CSS властивість, яка дозволяє
	вказати розташування елемента в рамках іменної області
	
	.page {
	grid-template-areas:
	"nav header"
	"nav body"
	"nav footer";
	}
	
	.menu {
	grid-area: nav;
	}
		
	grid-area
	
	Значення Опис
	
	назва_області Елемент буде відображена у вказаній області
    
	Область сітки
	
	grid-area — це також властивість, яка дозволяє вказати
	розташування елемента на сітці, є скороченням для
	властивостей grid-column та grid-row
	
	Значення Опис
	
	RS / CS / RE / CE
	
	RS — початковий рядок,
	CS — початковий стовпець,
	RE — кінцевий рядок,
	CE — кінцевий стовпець
	
	RS (row start) grid-row-start
	
	CS (column start) grid-column-start
	
	RE (row end) grid-row-end
	
	CE (column end) grid-column-end

	Область сітки
	
	Значення Опис
	
	RS / CS / RE / CE
	
	RS — початковий рядок,
	CS — початковий стовпець,
	RE — кінцевий рядок,
	CE — кінцевий стовпець
	
	RS (row start) grid-row-start
	
	CS (column start) grid-column-start
	
	RE (row end) grid-row-end
	
	CE (column end) grid-column-end
	
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Стовпець
	
	grid-column — це CSS властивість, яка встановлює
	від якого та по який стовпець буде відображатись елемент
	
	.example {
	grid-column: 1 / 3;
	}
		
	grid-column
	
	Значення Опис
	
	S / E S — початковий стовпець, E — кінцевий стовпець
	
	S (start) grid-column-start
	
	E (end) grid-column-end

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Рядок
	
	grid-row — це CSS властивість, яка встановлює
	від якого та по який рядок буде відображатись елемент
	
	.example {
	grid-row: 1 / 3;
	}
		
	grid-row
	
	Значення Опис
	
	S / E S — початковий рядок, E — кінцевий рядок
	
	S (start) grid-row-start
	
	E (end) grid-row-end
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Автоматичні стовпці
	
	grid-auto-columns — це CSS властивість, яка визначає
	розмір стовпців, які були вбудовані поза шаблоном
	
	.example {
	grid-auto-columns: 50px;
	}
		
	grid-auto-columns
	
	Значення Опис
	
	auto Розмір буде встановлено на автоматичну довжину
	
	довжина Розмір буде встановлено на вказану
	
	одиницю вимірювання
	
	% Розмір буде встановлено на вказаний відсоток
	
	fr (fractional unit) Вказує відносну одиницю пропорції
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Автоматичні рядки
	
	grid-auto-rows — це CSS властивість, яка визначає
	розмір рядків, які були вбудовані поза шаблоном
	
	.example {
	grid-auto-rows: 50px;
	}
		
	grid-auto-rows
	
	Значення Опис
	
	auto Розмір буде встановлено на автоматичну довжину
	
	довжина Розмір буде встановлено на вказану
	
	одиницю вимірювання
	
	% Розмір буде встановлено на вказаний відсоток
	
	fr (fractional unit) Вказує відносну одиницю пропорції
    
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Автоматичне
	розміщення
	
	grid-auto-flow — це CSS властивість, яка визначає,
	як елементи за замовчування розміщуються
	
	.example {
	grid-auto-flow: row dense;
	}
		
	grid-auto-flow
	
	Значення Опис
	
	row Елементи розміщуються по рядках
	
	column Елементи розміщуються по колонках
	
	dense Елементи розміщуються якомога ближче один
	до одного, заповнюючи всі можливі проміжки

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Проміжок
	
	gap — це CSS властивість, яка використовується
	для встановлення проміжку між елементами
	
	.example {
	gap: 20px;
	}
		
	gap
	
	Значення Опис
	
	R C
	R — проміжок між рядками
	С — проміжок між колонками
	
	R (row) <row-gap>
	
	C (column) <column-gap>
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Розміщення
	по першій лінії
	
	justify-content — це CSS властивість, яка відповідає
	за розміщення елементів по першій лінії
	
	.example {
	justify-content: center;
	}
	
	justify-content

	Розміщення
	по першій лінії
	
	Значення Опис
	
	flex-start Елементи вирівнюються на початку лінії
	
	flex-end Елементи вирівнюються в кінці лінії
	
	center Елементи вирівнюються по центру лінії
	
	space-between Елементи рівномірно розподіляються по лінії
	
	space-around
	
	Елементи рівномірно розподіляються
	по лінії з однаковими відстанями між ними
	та з меншим відступом від країв контейнера
	
	space-evenly Елементи рівномірно розподіляються по лінії з
		однаковими відстанями між елементами та краями блоку
	
	stretch Елементи розтягуються, щоб заповнити всю лінію

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Розміщення
	по другій лінії
	
	align-content — це CSS властивість, яка відповідає
	за розміщення елементів по другій лінії
	
	.example {
	align-content: center;
	}
		
	align-content

	Розміщення
	по другій лінії
	
	Значення Опис
	
	flex-start Елементи вирівнюються на початку лінії
	
	flex-end Елементи вирівнюються в кінці лінії
	
	center Елементи вирівнюються по центру лінії
	
	space-between Елементи рівномірно розподіляються по лінії
	
	space-around
	
	Елементи рівномірно розподіляються
	по лінії з однаковими відстанями між ними
	та з меншим відступом від країв контейнера
	
	space-evenly Елементи рівномірно розподіляються по лінії з
		однаковими відстанями між елементами та краями блоку
	
	stretch Елементи розтягуються, щоб заповнити всю лінію
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Розміщення по лініях
	
	place-content — це CSS властивість, яка є скороченням
	для властивостей justify-content та align-content
	
	.example {
	place-content: flex-start center;
	}
		
	place-content
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Вирівнювання
	по першій лінії
	
	justify-items — це CSS властивість, яка відповідає
	за вирівнювання елементів по першій лінії
	
	.example {
	justify-items: center;
	}
		
	justify-items

	Вирівнювання
	по першій лінії
	
	Значення Опис
	
	flex-start Елементи вирівнюються на початку лінії
	
	flex-end Елементи вирівнюються в кінці лінії
	
	center Елементи вирівнюються по центру лінії
	
	stretch Елементи розтягуються, щоб заповнити всю лінію
	
	baseline Елементи вирівнюються по лінії рядка тексту контейнера
	
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Вирівнювання
	по другій лінії
	
	align-items — це CSS властивість, яка відповідає
	за вирівнювання елементів по другій лінії
	
	.example {
	align-items: center;
	}
		
	align-items

	Вирівнювання
	по другій лінії
	
	Значення Опис
	
	flex-start Елементи вирівнюються на початку лінії
	
	flex-end Елементи вирівнюються в кінці лінії
	
	center Елементи вирівнюються по центру лінії
	
	stretch Елементи розтягуються, щоб заповнити всю лінію
	
	baseline Елементи вирівнюються по лінії рядка тексту контейнера
	
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Вирівнювання
	по лініях
	
	place-items — це CSS властивість, яка є скороченням
	для властивостей justify-items та align-items
	
	.example {
	place-items: flex-start center;
	}
		
	place-items
	
	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Індивідуальне
	вирівнювання
	по першій лінії
	
	justify-self — це CSS властивість, яка відповідає
	за індивідуальне вирівнювання елемента по першій лінії
	
	.example {
	justify-self: center;
	}
		
	justify-self

	Індивідуальне
	вирівнювання
	по першій лінії
	
	Значення Опис
	
	flex-start Елемент вирівнюється на початку лінії
	
	flex-end Елемент вирівнюється в кінці лінії
	
	center Елемент вирівнюється по центру лінії
	
	stretch Елемент розтягується, щоб заповнити всю лінію
	
	baseline Елемент вирівнюється по лінії рядка тексту контейнера

	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Індивідуальне
	вирівнювання
	по другій лінії
	
	align-self — це CSS властивість, яка відповідає
	за індивідуальне вирівнювання елемента по другій лінії
	
	.example {
	align-self: center;
	}
		
	align-self

	Індивідуальне
	вирівнювання
	по другій лінії
	
	Значення Опис
	
	flex-start Елемент вирівнюється на початку лінії
	
	flex-end Елемент вирівнюється в кінці лінії
	
	center Елемент вирівнюється по центру лінії
	
	stretch Елемент розтягується, щоб заповнити всю лінію
	
	baseline Елемент вирівнюється по лінії рядка тексту контейнера

	</pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Індивідуальне
	вирівнювання
	по лініях
	
	place-self — це CSS властивість, яка є скороченням
	для властивостей justify-self та align-self
	
	.example {
	place-items: flex-start center;
	}
		
	place-items
		
	</pre>

	</p>

	<hr />
	<hr />

</div>

<header class="header">
	<div class="">
		{{> logo}}
	</div>

	<nav class="header_nav">
		<div class="header_nav_right">
			{{> navTemplate list=header}}
		</div>
	</nav>
</header>

<main class="main">
	{{#with messages}}
	<div class="messages">
		<h1 class="messages_title">{{title}}</h1>

		{{#each list}}
		<div class="msg">
			<strong class="msg_name">{{name}}</strong>
			<p class="msg_text">{{message}}</p>
			<span class="msg_day">{{day}}</span>
		</div>
		{{/each}}

		<a href="#" class="messages_link">All messages</a>
	</div>
	{{/with}}

	{{#with form}}
	<form class="form">
		<h2 class="form_title">{{title}}</h2>

		<div class="form_input_list">
			{{#each inputs}}
			<input type="{{type}}" placeholder="{{placeholder}}" class="form_input" name="{{name}}"
				id="form-input-{{id}}" />
			{{/each}}
		</div>

		<div class="form_checkbox">
			<input type="checkbox" name="{{checkbox.name}}" id="{{checkbox.name}}">
			<div></div>
			<label for="{{checkbox.name}}">{{checkbox.label}}</label>
		</div>

		<button type="submit" class="form_button">{{button}}</button>
		<p class="form_info">{{info}}</p>
	</form>
	{{/with}}

	{{!-- <div class="advantages"> --}}
		{{#each advantages}}
		<div class="advantage">
			<strong>{{title}}</strong>
			<p>{{text}}</p>
		</div>
		{{/each}}
		{{!--
	</div> --}}
</main>

<div class="advantages">
	{{#each advantages}}
	<div>
		<strong>{{title}}</strong>
		<p>{{text}}</p>
	</div>
	{{/each}}
</div>

<footer class="footer">
	<div>
		{{> logo}}
		<span class="footer_copyright">Copyright 2023-2024</span>
	</div>
	{{#each footer}}
	<div>
		<span class="footer_title">{{title}}</span>
		{{> navTemplate list=links isVertical=true}}
	</div>
	{{/each}}
</footer>

{{!--
Цей код містить лише те, що буде виводитись в {{{body}}} в layout/grid.hbs
Адже наш layout/grid.hbs має вже структуру HTMLlist
--}}