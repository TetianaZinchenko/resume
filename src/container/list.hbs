{{!--
Це код container файлу для list сторінки,
в якому міститься код, котрий буде віддаватися по шляху (PATH) - "/list"
--}}

<div class="p-5">

	<hr />
	<hr />

	<div class="display-1"><mark>Робота з списками та таблицями</mark></div>

	<p>

	<pre>

	Маркер списку
	
	list-style — це CSS властивість, яка встановлює стилі
	для елементів списку, таких як &lt;ul&gt; і &lt;ol&gt;.
	
	.example {
	list-style: square;
	}
			
	list-style
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Маркер списку
	
	Значення Опис
	
	T P I T — тип маркера, P — розміщення маркеру,
	
	I — зображення-маркер
	
	T (type) list-style-type
	
	P (position) list-style-position
	
	I (image) list-style-image

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Тип маркера списку
	
	list-style-type — це CSS властивість, яка використовується
	для встановлення виду маркера списку
	
	.example {
	list-style-type: square;
	}
	
	list-style-type

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Тип маркера списку
	
	Значення Опис
	
	none Відключає відображення маркера
	
	disc Встановлює круглий маркер, який відображується
		як заповнене коло. Є значенням за замовчуванням
	
	circle Встановлює круглий маркер,
		який відображується як порожнє коло
	
	square Встановлює квадратний маркер,
		який відображується як заповнений квадрат
	
	decimal Встановлює нумерацію списку
		в десятковій системі числення
	
	decimal-leading-zero Встановлює нумерацію списку в десятковій системі
		числення, з додаванням нуля до чисел менше ніж 10

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Тип маркера списку
	
	Значення Опис
	
	lower-roman Встановлює нумерацію списку римськими цифрами
		в нижньому регістрі.
	
	upper-roman Встановлює нумерацію списку римськими цифрами
		в верхньому регістрі.
	
	lower-alpha Встановлює нумерацію списку в алфавітному
		порядку в нижньому регістрі.
	
	upper-alpha Встановлює нумерацію списку в алфавітному
		порядку в верхньому регістрі.

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Відображення
	
	display — це CSS властивість, яка визначає відображення
	елемента на веб-сторінці
	
	.example {
	display: inline;
	}
		
	display
	
	Значення Опис
	
	list-item Елемент відображається як маркований або нумерований
		список

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Позиція маркера
	списку
	
	list-style-position — це CSS властивість, яка визначає де
	будуть розміщуватись маркери списку відносно тексту
	
	.example {
	list-style-position: outside;
	}
		
	list-style-position

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Позиція маркера
	списку
	
	Значення Опис
	
	inside Маркер розташовується всередині текстового блоку
	
	outside Маркер розташовується поза текстовим блоком

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Зображення для
	маркера списку
	
	list-style-image — це CSS властивість,
	яка встановлює зображення для маркера списку.
	
	.example {
	list-style-image: none;
	}
		
	list-style-image

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Зображення для
	маркера списку
	
	Значення Опис
	
	url(image.png) Вказує шлях до файлу зображення в форматі
		png, gif, jpg або іншому.
	
	none Встановлює відсутність зображення.
	
	linear-gradient() Встановлює лінійний градієнт, де кінці градієнта
		знаходяться на протилежних кінцях елемента.
	
	radial-gradient() Встановлює радіальний градієнт, де центр градієнта
		знаходиться в центрі елемента.
	
	conic-gradient()
	
	Створює градієнт, який змінює колір у вигляді
	конуса. Це означає, що колір змінюється залежно
	від кута, який вимірюється від центру градієнта.

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Розміщення таблиці
	
	table-layout — це CSS властивість, яка визначає,
	як браузер повинен відображати таблицю
	і розподіляти простір між стовпцями та рядками
	
	.example {
	table-layout: fixed;
	}
		
	table-layout
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Розміщення таблиці
	
	Значення Опис
	
	auto Браузер обчислює ширину стовпців та розподіляє
	
	рядки відповідно до вмісту комірок таблиці.
	
	fixed
	
	Браузер використовує ширину стовпців, задану
	користувачем або визначену автоматично, і
	розподіляє простір між стовпцями рівномірно,
	незалежно від вмісту комірок таблиці.

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Об’єднання рамки
	таблиці
	
	border-collapse — це CSS властивість, яка
	використовується для задання того, чи повинні
	об'єднуватися рамки таблиці в одну рамку, чи ні.
	
	.example {
	border-collapse: collapse;
	}
		
	border-collapse
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Об’єднання рамки
	таблиці
	
	Значення Опис
	
	separate Рамки таблиці не повинні об'єднуватися і повинні
		бути розташовані окремо одна від одної
	
	collapse Рамки таблиці повинні бути об'єднані в одну рамку.
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Відстань між
	рамками
	
	border-spacing — це CSS властивість,
	яка встановлює відстань між рамками таблиці
	
	.example {
	border-spacing: 12px;
	}
		
	border-spacing
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Позиція заголовка
	
	caption-side — це CSS властивість, яка використовується
	для визначення положення заголовка таблиці
	
	.example {
	caption-side: top;
	}
	
	caption-side

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Позиція заголовка
	
	Значення Опис
	
	top Заголовок відображається зверху таблиці
	
	bottom Заголовок відображається знизу таблиці
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Відображення
	порожніх комірок
	
	empty-cells — це CSS властивість, яка визначає
	відображення границі комірок, в яких немає контенту.
	
	.example {
	empty-cells: show;
	}
		
	empty-cells
	
	Значення Опис
	
	show Границі будуть відображені навіть для порожніх комірок
	
	hide Границі будуть приховані для порожніх комірок

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Прозорість
	
	opacity — це CSS властивість, яка використовується
	для зміни прозорості елемента
	
	.example {
	opacity: 50%;
	}
		
	opacity
	
	Значення Опис
	
	число Числове значення від 0 до 1
	
	% Від 0% до 100%
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Вміст
	
	сontent — це CSS властивість, яка використовується
	для вставки вмісту псевдо елементів ::before та ::after
	
	.example {
	сontent: normal;
	}
	
	сontent
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Вміст
	
	Значення Опис
	
	normal Не додає жодного додаткового вмісту до елемента.
	
	Значення за замовчуванням
	
	none Відсутність вмісту
	
	&lt;string&gt; Вставляє текстовий рядок
	
	open-quote Встановлює лапки, що відкриваються,
		перед елементом
	
	close-quote Встановлює лапки, що закриваються,
		перед елементом
	
	no-open-quote Відключає лапки, що відкриваються, перед
		елементом
	
	no-close-quote Відключає лапки, що закриваються, перед
		елементом.
	
	url() Вставляє картинку за URL-адресою
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Калькулювання
	
	сalc() — це CSS функція, яка дозволяє виконувати
	арифметичні операції в межах CSS властивості
	
	.example {
	font-size: 50% - 15px ;
	}
	
	calc( )
	
	сalc()
	
	Значення Опис
	
	+ Додавання
	
	Віднімання
	
	* Множення
	
	/ Ділення
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Змінна
	
	var() — це CSS функція, яка використовується для
	визначення значення CSS змінних.
	
	:root {
	--green: # 1e90ff;
	}
		
	--&lt;name&gt;: значення;
	
	.selector {
	color: var(--green, #000000);
	}
		
	var(--&lt;name&gt;, &lt;default&gt;)
	
	&lt;name&gt; — це назва змінної
	&lt;default&gt; — це значення за замовчуванням
        
    </pre>

	</p>

	<hr />
	<hr />

	<div class="page">
		<div class="page_content">
			<div class="page_block">
				<header class="header row g-0">
					<div class="col-3">
						{{> logo}}
					</div>

					<nav class="header_nav col-9">
						<div class="header_nav_right">
							{{> navTemplate1 list=header}}
						</div>
					</nav>
				</header>

				{{!-- {{> divider}} --}}
			</div>

			<div class="page_block">
				{{> hero title=hero.title text=hero.text}}
			</div>

			<div class="page_block">
				<main class="row g-0 plans">

					{{#each plans}}

					<div class="col plans_card">
						{{> card data=this}}
					</div>

					{{/each}}

				</main>
			</div>

			<div class="page_block">
				<div class="calc">
					<table class="table">
						<caption>My table</caption>
						<tbody>
							{{#each footer}}
							<tr>
								{{#each links}}
								<td>
									{{text}}
								</td>
								{{/each}}
								<td></td>
							</tr>
							{{/each}}
							{{!-- <tr>
								<td>
									Test
								</td>
								<td>
									Test
								</td>
							</tr> --}}
						</tbody>
					</table>
				</div>
			</div>

			<div class="page_block">
				{{!-- {{> divider}} --}}
				<footer class="row g-0 footer">
					<div class="col-3">
						{{> logo}}
						<span class="footer_copyright">Copyright 2023-2024</span>
					</div>
					{{#each footer}}
					<div class="col-3">
						<span class="footer_title">{{title}}</span>
						{{> navTemplate1 list=links isVertical=true}}
					</div>
					{{/each}}
				</footer>
			</div>
		</div>
	</div>
</div>

{{!--
Цей код містить лише те, що буде виводитись в {{{body}}} в layout/list.hbs
Адже наш layout/list.hbs має вже структуру HTML
--}}