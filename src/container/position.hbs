{{!--
Це код container файлу для position сторінки,
в якому міститься код, котрий буде віддаватися по шляху (PATH) - "/position"
--}}

<div class="p-5">

	<hr />
	<hr />

	<div class="display-1"><mark>Робота з абсолютним позиціюванням</mark></div>

	<p>

	<pre>

	Що таке абсолютне
	позиціювання?
	
	Абсолютне позиціювання (position) — це технологія
	позиціовання в CSS, яка дає можливість пересувати
	елементи по екрану горизонтально та вертикально
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Позиція
	
	position — це CSS властивість, яка визначає
	тип позиціюнування елемента на веб-сторінці
	
	.example {
	position: relative;
	}
		
	position

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Позиція
	
	Значення Опис
	
	static Елемент відображається в потоці документа,
	
	без спеціального розташування (за замовчуванням)
	
	relative Елемент можна позиціонувати відносно
	його початкового місцезнаходження.
	
	absolute Елемент абсолютно розташовується відносно
	його батьківського елемента або вікна браузера.
	
	fixed
	
	Так само як absolute, але залишається на
	фіксованому місці на екрані, незалежно від
	прокрутки сторінки
	
	sticky Так само як relative, він залишається на місці,
	але стає фіксованим при прокручуванні сторінки.

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Напрямки позиції
	
	Напрямки позиції — це CSS властивості, які
	використовуються для задання позиціонування
	елемента на сторінці за допомогою CSS.
	
	.example {
	top: 10px;
	}
		
	position
	
	Властивість Опис
	
	top Вертикальний відступ елемента від верхнього краю
	
	right Горизонтальний відступ елемента від правого краю
	
	bottom Вертикальний відступ елемента від нижнього краю
	
	left Горизонтальний відступ елемента від лівого краю

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	індекс Z
	
	z-index — це CSS властивість, яка використовується для
	визначення порядкового номера розташування елемента
	на веб-сторінці вздовж осі Z.
	
	При використанні z-index, елемент повинен мати
	position: relative, absolute або fixed.
	
	.example {
	z-index: 2;
	}
		
	z-index

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Зміщення
	
	float — це CSS властивість, яка використовується для
	вирівнювання елементів по горизонталі в потоці документа.
	
	Властивість розміщує елемент зліва чи справа від
	контейнера, дозволяючи тексту обтікати його.
	
	.example {
	float: left;
	}
		
	float

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Зміщення
	
	Значення Опис
	
	none Елемент не зміщується в будь-яку сторону
		і залишається в потоці документа
	
	left Елемент зсувається вліво
		та елементи обтікають його справа
	
	right Елемент зсувається вправо
		та елементи обтікають його зліва

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Очищення зміщення
	
	clear — це CSS властивість, яка використовується для
	визначення як потрібно поводитись елементам, які
	обтікають інші елементи при зміщенні (float)
	
	.example {
	clear: right;
	}
		
	clear

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Очищення зміщення
	
	Значення Опис
	
	none Елемент може обтікати
	
	left Елемент не може обтікати по лівій стороні
	
	right Елемент не може обтікати по правій стороні
	
	both Елемент не може обтікати всіма сторонам

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Зміна розмірів медіа
	
	object-fit — це CSS властивість, яка використовується
	для зміни розмірів зображення або відео в контейнері,
	зберігаючи пропорції розмірів сторін
	
	.example {
	object-fit: cover;
	}
		
	object-fit

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Зміна розмірів медіа
	
	Значення Опис
	
	none Зображення буде відображене у своєму
		оригінальному розмірі без змін
	
	contain
	
	Зображення буде зменшене або розтягнуте для
	того, щоб поміститись повністю в контейнері зі
	збереженням пропорцій сторін
	
	cover
	
	Зображення буде збільшене або зменшене, щоб
	заповнити контейнер зі збереженням пропорцій
	сторін, але може бути обрізане
	
	fill Зображення буде розтягнуте для заповнення всього
		контейнера без збереження пропорцій сторін
	
	scale-down
	
	Зображення буде зменшене, якщо воно більше
	контейнера, але не буде розтягнуте, якщо воно
	менше контейнера
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Зміна позиції медіа
	
	object-position — це CSS властивість, яка використовується
	для зміни позиції зображення або відео в контейнері
	
	.example {
	object-position: top right;
	}
		
	object-position

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Зміна позиції медіа
	
	Значення Опис
	
	center Зображення буде вирівняне по центру контейнера
	
	top Зображення буде вирівняне до верхньої границі
		контейнера
	
	bottom Зображення буде вирівняне до нижньої границі
		контейнера
	
	left Зображення буде вирівняне до лівої границі
		контейнера
	
	right Зображення буде вирівняне до правої границі
		контейнера
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Зміна позиції медіа
	
	Значення Опис
	
	top left Зображення буде вирівняне до верхньої лівої
		границі контейнера
	
	top right Зображення буде вирівняне до верхньої правої
		границі контейнера
	
	bottom left Зображення буде вирівняне до нижньої лівої границі
		контейнера
	
	bottom right Зображення буде вирівняне до нижньої правої
		границі контейнера
	
	довжина Довжина, яка вимірюється в пікселях, ем або інших
		одиницях виміру
	
	%
	
	Відсоткове відношення до ширини та висоти
	контейнера, яке використовується для визначення
	позиції зображення
    
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Вибір користувача
	
	user-select — це CSS властивість, яка вказує,
	як користувач може виділяти текст на сторінці
	
	.example {
	user-select: none;
	}
		
	user-select
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Вибір користувача
	
	Значення Опис
	
	auto Браузер може виділяти текст в текстовому блоку
		або елементі
	
	none Користувач не може виділяти текст в текстовому
		блоку або елементі
	
	all Користувач може виділяти всі елементи на сторінці

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Колір курсора
	редагування
	
	caret-color — це CSS властивість, яка визначає
	колір курсора редагування в текстових полях
	та інших елементах, які можуть бути редаговані.
	
	.example {
	caret-color: red;
	}
		
	caret-color
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Колір курсора
	редагування
	
	Значення Опис
	
	auto Браузер встановлює колір курсора редагування в
		залежності від фонового кольору елемента
	
	колір Задається конкретний колір курсора редагування у
		вигляді значення кольору або ключового слова

    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Поведінка прокрутки
	
	scroll-behavior — це CSS властивість, яка визначає,
	яким чином сторінка буде прокручуватися
	при використанні функції прокручування
	
	.example {
	scroll-behavior: smooth;
	}
		
	scroll-behavior
        
    </pre>

	</p>

	<hr />
	<hr />

	<p>

	<pre>

	Поведінка прокрутки
	
	Значення Опис
	
	auto Стандартна поведінка прокручування
	
	smooth Сторінка буде плавно прокручуватися
        
    </pre>

	</p>

	<hr />
	<hr />

</div>

<div class="page">
	<div class="page_content">
		<header class="header">
			{{!-- <div class="">
				{{> logo}}
			</div> --}}
			<a href="#test">
				{{> logo}}
			</a>

			<nav class="header_nav">
				<div class="header_nav_right">
					{{> navTemplate list=header}}
				</div>
			</nav>
		</header>

		{{!-- <div class="modal">
			{{hero.text}}
		</div> --}}

		{{#with hero}}
		<div class="hero">
			<div class="hero_content">
				<h1 class="hero_title">{{title}}</h1>
				<p class="hero_text">{{text}}</p>
			</div>
			<div class="hero_slider">
				<div class="hero_slider_icon hero_slider_left">{{left}}</div>
				<img src="{{photo}}" alt="Hero image" class="hero_image">
				<div class="hero_slider_icon hero_slider_right">{{right}}</div>
			</div>
		</div>
		{{/with}}

		{{!-- <div class="modal">
			{{hero.text}}
		</div> --}}

		{{!-- <div class="modal">
			{{hero.text}} {{hero.text}}
			<img src="{{hero.photo}}" alt="Hero image" class="modal_image">
			{{hero.text}} {{hero.text}}
		</div> --}}

		<input type="text" class="input">

		<div class="modal">
			{{hero.text}} {{hero.text}}
			<img src="{{hero.photo}}" alt="Hero image" class="modal_image">
			<div class="modal_text">
				{{hero.text}} {{hero.text}}
			</div>
		</div>

		<main class="blog">
			{{#each blog}}
			{{> cardBlog data=this}}
			{{/each}}
		</main>

		{{#with form}}
		<div class="form">
			<div class="form_content">
				<h3 class="form_title">{{title}}</h3>
				<p class="form_info">{{info}}</p>
			</div>
			<div class="form_action">
				<a href="{{href}}" class="button form_button">{{button}}</a>
			</div>
		</div>
		{{/with}}

		<footer class="footer" id="test">
			<div>
				{{> logo}}
				<span class="footer_copyright">Copyright 2023-2024</span>
			</div>
			{{#each footer}}
			<div>
				<span class="footer_title">{{title}}</span>
				{{> navTemplate list=links isVertical=true}}
			</div>
			{{/each}}
		</footer>
	</div>
</div>

{{!--
Цей код містить лише те, що буде виводитись в {{{body}}} в layout/position.hbs
Адже наш layout/position.hbs має вже структуру HTMLlist
--}}